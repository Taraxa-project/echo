replicaCount: 1

image:
  market:
    repository: gcr.io/jovial-meridian-249123/market
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  subgraph:
    repository: gcr.io/jovial-meridian-249123/subgraph
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  publish:
    repository: gcr.io/jovial-meridian-249123/publish
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceProvider:
  type: ClusterIP
  port: 8030

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

persistence: {}

# set to false when providing secrets externally i.e. thru SealedSecrets
appSecret:
  create: true

configEnvs:
  # elasticsearch
  AQUARIUS_DB_HOSTNAME: https://elasticsearch-master
  AQUARIUS_DB_MODULE: elasticsearch
  AQUARIUS_DB_NAME: aquarius
  AQUARIUS_DB_PORT: "9200"
  AQUARIUS_DB_SCHEME: https
  AQUARIUS_DB_SSL: "true"
  # aquarius
  AQUARIUS_URL: http://0.0.0.0:5000
  AQUARIUS_LOG_LEVEL: DEBUG
  AQUARIUS_WORKERS: "4"
 
  # provider
  PROVIDER_LOG_LEVEL: DEBUG
  PROVIDER_URL: http://0.0.0.0:8030
  PROVIDER_WORKERS: "4"
  PROVIDER_VERSION: "2"
  PROVIDER_IPFS_GATEWAY: ipfs.ocean.svc.cluster.local:5001
  PROVIDER_OPERATOR_SERVICE_URL: < Operator service URL>
  PROVIDER_AQUARIUS_URL: aquarius.ocean.svc.cluster.local:5000
 
  # postgres
  POSTGRES_HOST: postgresql.ocean.svc.cluster.local
  POSTGRES_DB: postgres
  # ipfs
  # graph
  GRAPH_IPFS: ipfs.ocean.svc.cluster.local:5001
  # subgraph
  SUBGRAPH_URL_0: https://v4.subgraph.mumbai.oceanprotocol.com

  # chain 0 
  # taraxa
  CHAIN_ID_0: "80001"
  CHAIN_NAME_0: taraxa
  CHAIN_EVENTS_RPC_0: https://polygon-mumbai.infura.io/v3/ID
  CHAIN_OCEAN_ADDRESS_0: contract

  #publish
  PUBLISH_RPC_ENDPOINT: "https://rpc.mainnet.taraxa.io"
  PUBLISH_CONTRACT_ADDRESS: ""
  PUBLISH_IPFS_URI: "https://ipfs.infura.io:5001"
 
secretEnvs:
  # elasticsearch
  AQUARIUS_DB_USERNAME: ""
  AQUARIUS_DB_PASSWORD: ""

  #provider
  PROVIDER_PRIVATE_KEY_0: ""
  PROVIDER_UNIVERSAL_PRIVATE_KEY: <your universal private key>

  #postgres
  POSTGRES_USER: ""
  POSTGRES_PASS: ""

  #publish
  PUBLISH_IPFS_USERNAME: ""
  PUBLISH_IPFS_PASSWORD: ""
  PUBLISH_FACTORY_DEPLOYER_PRIVATE_KEY: ""
